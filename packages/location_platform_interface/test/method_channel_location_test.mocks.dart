// Mocks generated by Mockito 5.0.0 from annotations
// in location_platform_interface/test/method_channel_location_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter/src/services/binary_messenger.dart' as _i3;
import 'package:flutter/src/services/message_codec.dart' as _i2;
import 'package:flutter/src/services/platform_channel.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeMethodCodec extends _i1.Fake implements _i2.MethodCodec {}

class _FakeBinaryMessenger extends _i1.Fake implements _i3.BinaryMessenger {}

/// A class which mocks [EventChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventChannel extends _i1.Mock implements _i4.EventChannel {
  MockEventChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  _i2.MethodCodec get codec => (super.noSuchMethod(Invocation.getter(#codec),
      returnValue: _FakeMethodCodec()) as _i2.MethodCodec);
  @override
  _i3.BinaryMessenger get binaryMessenger =>
      (super.noSuchMethod(Invocation.getter(#binaryMessenger),
          returnValue: _FakeBinaryMessenger()) as _i3.BinaryMessenger);
  @override
  _i5.Stream<dynamic> receiveBroadcastStream([dynamic arguments]) => (super
      .noSuchMethod(Invocation.method(#receiveBroadcastStream, [arguments]),
          returnValue: Stream<dynamic>.empty()) as _i5.Stream<dynamic>);
}
